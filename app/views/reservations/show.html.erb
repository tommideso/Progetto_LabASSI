<div class="flex justify-between items-center">
  <h2 class="page-title">Prenotazione #<%= @reservation.id %></h2>
  <%= button_to reservations_path, method: :get do %>
    <div class="btn btn-outline flex justify-between gap-2">
      <%= inline_svg_tag "icons/right.svg", class: "w-6 h-6 icon-outline rotate-180" %>
      <p>Torna alle prenotazioni</p>
    </div>
  <% end %>
</div>

<div class="flex gap-4">
  <div class="card card-content lg:w-3/4 h-fit">
      <h2 class="card-title pb-4">Dettagli prenotazione</h2>
      
    <div class="space-y-4">
      <div class="flex justify-between items-center">
        <% client_label = current_user.client? ? "Tu" : "Cliente" %>
        <% if current_user.admin? || current_user.client? %>
            <div class="flex gap-2">
              <%= inline_svg_tag "icons/person.svg", class: "w-6 h-6 icon-secondary" %>
              <p><span class="font-semibold"><%= client_label %></span></p>
            </div>
          <%= link_to profile_path(@reservation.client.user) do %>
              <p><%= @reservation.client.user.nome %> <%= @reservation.client.user.cognome %></p>
          <% end %>
        <% else %>
          <div class="flex gap-2">
            <%= inline_svg_tag "icons/person.svg", class: "w-6 h-6 icon-secondary" %>
            <p><span class="font-semibold">Cliente:</span> <%= @reservation.client.user.nome %> <%= @reservation.client.user.cognome %></p>
          </div>
        <% end %> 
      </div>
            
      <%# Chef %>
      <div class="flex justify-between items-center">
        <% chef_label = current_user.chef? ? "Tu" : "Chef" %>
        <div class="flex gap-2">
            <%= inline_svg_tag "icons/chef.svg", class: "w-6 h-6 icon-secondary " %>
            <p><span class="font-semibold"><%= chef_label %></span></p>
          </div>
        <%= link_to profile_path(@reservation.chef.user) do %>
            <p><%= @reservation.chef.user.nome %> <%= @reservation.chef.user.cognome %></p>
        <% end %>
      </div>

      <%# Indirizzo %>
      
      <div class="flex justify-between items-center">
        <div class="flex gap-2">
          <%= inline_svg_tag "icons/calendar.svg", class: "w-6 h-6 icon-secondary" %>
          <p><span class="font-semibold">Data Prenotazione:</span></p>
        </div>
        <p> <%= @reservation.data_prenotazione %> </p>
      </div>
      
      <div class="flex justify-between items-center">
        <div class="flex gap-2">
          <%= inline_svg_tag "icons/clock.svg", class: "w-6 h-6 icon-secondary" %>
          <p><span class="font-semibold">Tipo pasto:</span></p>
        </div>
        <p> <%= @reservation.tipo_pasto.capitalize %> </p>
      </div>
    
      <div class="flex justify-between items-center">
        <div class="flex gap-2">
          <%= inline_svg_tag "icons/loader.svg", class: "w-6 h-6 icon-secondary" %>
        <p class="text-xl font-semibold">Stato</p>
        </div>
        <% colore = case @reservation.stato  
                  when "completata" then "blue"
                  when "cancellata" then "destructive"
                  when "attesa_pagamento" then "yellow"
                  when "confermata" then "success"
                  when "rimborsata" then "orange"
                  else "blue"
              end %>
        <%= render partial: "shared_partials/status", locals: {colore: colore, testo: @reservation.stato.humanize } %>
      </div>
      <div class="flex justify-between items-center">
        <div class="flex gap-2">
          <%= inline_svg_tag "icons/groups.svg", class: "w-6 h-6 icon-secondary" %>
          <p><span class="font-semibold">Numero Persone</span></p>
        </div>
        <p><%= @reservation.num_persone %></p>
      </div>
      <div class="flex justify-between items-center">
        <div class="flex gap-2">
          <%= inline_svg_tag "icons/pin.svg", class: "w-6 h-6 icon-secondary" %>
          <p><span class="font-semibold">Indirizzo Consegna</span></p>
        </div>
        <p><%= @reservation.indirizzo_consegna %></p>
      </div>
      <div class="flex justify-between items-center">
        <div class="flex gap-2">
          <%= inline_svg_tag "icons/text.svg", class: "w-6 h-6 icon-secondary" %>
          <p><span class="font-semibold">Modifiche richieste</span></p>
        </div>
        <p><%= @reservation.modifiche_richieste.present? ? @reservation.modifiche_richieste : "Nessuna nota" %></p>
      </div>
      <%# Extra %>
      <% if @reservation.extra.present? %>
        <div class="flex justify-between items-center">
          <div class="flex gap-2">
            <%= inline_svg_tag "icons/plus.svg", class: "w-6 h-6 icon-secondary" %>
            <p><span class="font-semibold">Extra</span></p>
          </div>
          <% extra = @reservation.extra.map { |key, value| value == "true" ? key == "miseenplace" ? "Mise en place" : key.capitalize : nil }.compact %>
          <% if extra.any? %>
            <%= extra.join(", ") %>
          <% else %>
            <p>Nessun extra selezionato</p>
          <% end %>
        </div>
      <% end %>
    </div>
  </div>


  <div class="lg:w-1/4 flex flex-col gap-2">
    <div class="card card-content flex flex-col gap-2">
      <h2 class="card-title">Gestione</h2>
      
      <div class="flex justify-between items-center">
        <p class="text-xl font-semibold">Prezzo Totale</p>
        <p><%= @reservation.prezzo %>€</p>
      </div>
      <div class="flex w-full gap-2">
        <% if current_user.client? || current_user.chef? %>
          <% if @reservation.attesa_pagamento? || @reservation.confermata? %>
            <%= button_to reservation_path(@reservation), method: :delete, data: { turbo: false } do %>
              <div class="btn btn-destructive">Annulla Prenotazione</div>
            <% end %>
          <% end %>
        <% end %>
        <% if current_user.client? %>
          <% if @reservation.attesa_pagamento? && current_user.client? %>
            <%= render partial: 'pay/stripe/checkout_button', locals: { session: @checkout_session, title: "Paga", class: "btn btn-default" } %>
          <% end %>
        <% end %>
        <% if @current_user.admin? %>
          <%= link_to menu_version_path(@reservation.menu, @reservation.menu_version_id) do %>
            <div class="btn-link">Menu al momento della prenotazione</div>
          <% end %>
          <% if @reservation.completata? %>
            <%= button_to reservation_path(@reservation), method: :delete, data: { turbo: false } do %>
              <div class="btn btn-destructive">Rimborsa</div>
            <% end %>
          <% end %>
        <% end %>
      </div>
      <% if @reservation.attesa_pagamento? && current_user.chef? %>
        <p>Il cliente deve ancora pagare</p>
      <% elsif @reservation.confermata? %>
        <p>Il pagamento è stato effettuato</p>
      <% end %>
      
    </div>
    <%= link_to menu_path(@reservation.menu) do %>
      <div>
        <%= render partial: "menus/menu_card", locals: {menu: @reservation.menu} %>
      </div>
    <% end %>
  </div>
</div>


<!-- Recensioni -->
<% if @reservation.completata? %>
  <% if current_user.client? %>
    <% if @reservation.reviews.empty? || @reservation.reviews.length == 1 %>
      <%= form_with(model: [@reservation, @review], url: create_by_client_reservation_reviews_path(@reservation), local: true) do |form| %>
        <% if @review.errors.any? %>
          <div id="error_explanation">
            <h2><%= pluralize(@review.errors.count, "error") %> errori non hanno permesso di salvare la recensione:</h2>
            <ul>
              <% @review.errors.full_messages.each do |message| %>
                <li><%= message %></li>
              <% end %>
            </ul>
          </div>
        <% end %>

        <%= form.hidden_field :prenotazione_id, value: @reservation.id %>

        <!-- Valutazione per Chef -->
        <div class="field">
          <%= form.label :valutazione_chef, "Valutazione per Chef" %>
          <div class="star-rating" id="star-rating-chef">
            <% (1..5).each do |i| %>
              <%= form.radio_button :valutazione_chef, i, id: "valutazione_chef_#{i}" %>
              <label for="valutazione_chef_#{i}" class="star" data-value="<%= i %>"> &#9733;</label>
            <% end %>
            <%= form.number_field :valutazione_chef, id: 'valutazione_chef_value', style: 'opacity: 0;', class: "hidden_form", required: true %>
          </div>
        </div>

        <!-- Valutazione per Menu -->
        <div class="field">
          <%= form.label :valutazione_menu, "Valutazione per Menu" %>
          <div class="star-rating" id="star-rating-menu">
            <% (1..5).each do |i| %>
              <%= form.radio_button :valutazione_menu, i, id: "valutazione_menu_#{i}" %>
              <label for="valutazione_menu_#{i}" class="star" data-value="<%= i %>"> &#9733;</label>
            <% end %>
            <%= form.number_field :valutazione_menu, id: 'valutazione_menu_value', style: 'opacity: 0;', class: "hidden_form", required: true %>
          </div>
        </div>

        <div class="field">
          <%= form.label :commento, "Commento per menu" %>
          <%= form.text_area :commento, required: true %>
        </div>
        
        <div class="actions">
          <%= form.submit %>
        </div>
      <% end %>
    <% end %>

  <% elsif current_user.chef? %>
    <% if @reservation.reviews.empty? || @reservation.reviews.length == 2 %>
      <%= form_with(model: [@reservation, @review], url: create_by_chef_reservation_reviews_path(@reservation), local: true) do |form| %>
        <% if @review.errors.any? %>
          <div id="error_explanation">
            <h2><%= pluralize(@review.errors.count, "error") %> errori non hanno permesso di salvare la recensione:</h2>
            <ul>
              <% @review.errors.full_messages.each do |message| %>
                <li><%= message %></li>
              <% end %>
            </ul>
          </div>
        <% end %>

        <%= form.hidden_field :prenotazione_id, value: @reservation.id %>
      
        <!-- Valutazione per Cliente -->
        <div class="field">
          <%= form.label :valutazione_cliente, "Valutazione Cliente" %>
          <div class="star-rating" id="star-rating-client">
            <% (1..5).each do |i| %>
              <%= form.radio_button :valutazione_cliente, i, id: "valutazione_cliente_#{i}" %>
              <label for="valutazione_cliente_#{i}" class="star" data-value="<%= i %>"> &#9733;</label>
            <% end %>
            <%= form.number_field :valutazione_cliente, id: 'valutazione_cliente_value', style: 'opacity: 0;', class: "hidden_form", required: true %>
          </div>
        </div>
        
        <div class="actions">
          <%= form.submit %>
        </div>

      <% end %>
    <% end %>
  <% end %>
<% end %>

<!-- Recensioni esistenti -->
<% @reservation.reviews.each do |review| %>
  <div class="review">
    <p><strong>Recensione a:</strong> <%= review.tipo_recensione_type %></p>
    <p><strong>Valutazione:</strong> <%= review.valutazione %></p>
    <% if review.commento.present? %>
      <p><strong>Commento:</strong> <%= review.commento %></p>
    <% end %>
  </div>
<% end %>





<style>
  .hidden_form {
    width: 0;
    height: 0;
    position: absolute;
    height: 40px;
    margin-left: 50px;
    cursor: none;
    pointer-events: none;
  }

  .star-rating {
    display: inline-flex;
  }

  .star-rating input[type="radio"] {
    display: none; /* Nascondi i radio button */
  }

  .star-rating label {
    font-size: 2rem;
    color: #ddd; /* Colore grigio iniziale */
    cursor: pointer;
  }

  .star-rating .selected {
    color: #ffc700; /* Colore giallo quando selezionate */
  }
</style>

<script>
document.addEventListener("turbo:load", function() {
  console.log("DOM fully loaded and parsed");

  // Funzione per aggiornare il colore delle stelle
  function updateStars(container, value) {
    const stars = container.querySelectorAll("label");
    stars.forEach((star, index) => {
      star.style.color = index < value ? "#ffc700" : "#ddd"; // Giallo se selezionato, altrimenti grigio
    });
  }

  // Inizializza ogni star-rating
  document.querySelectorAll(".star-rating").forEach(container => {
    let selectedValue = parseInt(container.getAttribute("data-rating")) || 0;
    updateStars(container, selectedValue);

    container.addEventListener("mouseover", function(event) {
      if (event.target.classList.contains("star")) {
        const value = parseInt(event.target.getAttribute("data-value"));
        console.log("Mouse over star with value", value);
        updateStars(container, value);
      }
    });

    container.addEventListener("mouseout", function() {
      console.log("Mouse out of star rating");
      updateStars(container, selectedValue);
    });

    container.addEventListener("click", function(event) {
      if (event.target.classList.contains("star")) {
        selectedValue = parseInt(event.target.getAttribute("data-value"));
        container.setAttribute("data-rating", selectedValue);
        console.log("Star clicked with value", selectedValue);
        updateStars(container, selectedValue);
        const radioButton = container.querySelector(`input[type="radio"][value="${selectedValue}"]`);
        if (radioButton) radioButton.checked = true;

        // Update the hidden number field to make it required
        const hiddenField = container.querySelector('input[type="number"]');
        if (hiddenField) hiddenField.value = selectedValue;
      }
    });
  });
});
</script>